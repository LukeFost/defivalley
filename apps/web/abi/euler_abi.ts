const euler_swap_factory = [
  {
    type: "constructor",
    inputs: [
      { name: "evc", type: "address", internalType: "address" },
      { name: "evkFactory_", type: "address", internalType: "address" },
      { name: "eulerSwapImpl_", type: "address", internalType: "address" },
      { name: "feeOwner_", type: "address", internalType: "address" },
      { name: "feeRecipientSetter_", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "EVC",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_PROTOCOL_FEE",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_PROTOCOL_FEE",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "computePoolAddress",
    inputs: [
      {
        name: "poolParams",
        type: "tuple",
        internalType: "struct IEulerSwap.Params",
        components: [
          { name: "vault0", type: "address", internalType: "address" },
          { name: "vault1", type: "address", internalType: "address" },
          { name: "eulerAccount", type: "address", internalType: "address" },
          {
            name: "equilibriumReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "equilibriumReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          { name: "priceX", type: "uint256", internalType: "uint256" },
          { name: "priceY", type: "uint256", internalType: "uint256" },
          { name: "concentrationX", type: "uint256", internalType: "uint256" },
          { name: "concentrationY", type: "uint256", internalType: "uint256" },
          { name: "fee", type: "uint256", internalType: "uint256" },
          { name: "protocolFee", type: "uint256", internalType: "uint256" },
          {
            name: "protocolFeeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
      { name: "salt", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deployPool",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct IEulerSwap.Params",
        components: [
          { name: "vault0", type: "address", internalType: "address" },
          { name: "vault1", type: "address", internalType: "address" },
          { name: "eulerAccount", type: "address", internalType: "address" },
          {
            name: "equilibriumReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "equilibriumReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          { name: "priceX", type: "uint256", internalType: "uint256" },
          { name: "priceY", type: "uint256", internalType: "uint256" },
          { name: "concentrationX", type: "uint256", internalType: "uint256" },
          { name: "concentrationY", type: "uint256", internalType: "uint256" },
          { name: "fee", type: "uint256", internalType: "uint256" },
          { name: "protocolFee", type: "uint256", internalType: "uint256" },
          {
            name: "protocolFeeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "initialState",
        type: "tuple",
        internalType: "struct IEulerSwap.InitialState",
        components: [
          { name: "currReserve0", type: "uint112", internalType: "uint112" },
          { name: "currReserve1", type: "uint112", internalType: "uint112" },
        ],
      },
      { name: "salt", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deploymentTimestamp",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "enableProtocolFee",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "eulerSwapImpl",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "evkFactory",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolByEulerAccount",
    inputs: [
      { name: "eulerAccount", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pools",
    inputs: [],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolsByPair",
    inputs: [
      { name: "asset0", type: "address", internalType: "address" },
      { name: "asset1", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolsByPairLength",
    inputs: [
      { name: "asset0", type: "address", internalType: "address" },
      { name: "asset1", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolsByPairSlice",
    inputs: [
      { name: "asset0", type: "address", internalType: "address" },
      { name: "asset1", type: "address", internalType: "address" },
      { name: "start", type: "uint256", internalType: "uint256" },
      { name: "end", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolsLength",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolsSlice",
    inputs: [
      { name: "start", type: "uint256", internalType: "uint256" },
      { name: "end", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "protocolFee",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "protocolFeeRecipient",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "recipientSetter",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setProtocolFee",
    inputs: [{ name: "newFee", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setProtocolFeeRecipient",
    inputs: [
      { name: "newRecipient", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "uninstallPool",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      { name: "user", type: "address", indexed: true, internalType: "address" },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PoolConfig",
    inputs: [
      { name: "pool", type: "address", indexed: true, internalType: "address" },
      {
        name: "params",
        type: "tuple",
        indexed: false,
        internalType: "struct IEulerSwap.Params",
        components: [
          { name: "vault0", type: "address", internalType: "address" },
          { name: "vault1", type: "address", internalType: "address" },
          { name: "eulerAccount", type: "address", internalType: "address" },
          {
            name: "equilibriumReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "equilibriumReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          { name: "priceX", type: "uint256", internalType: "uint256" },
          { name: "priceY", type: "uint256", internalType: "uint256" },
          { name: "concentrationX", type: "uint256", internalType: "uint256" },
          { name: "concentrationY", type: "uint256", internalType: "uint256" },
          { name: "fee", type: "uint256", internalType: "uint256" },
          { name: "protocolFee", type: "uint256", internalType: "uint256" },
          {
            name: "protocolFeeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "initialState",
        type: "tuple",
        indexed: false,
        internalType: "struct IEulerSwap.InitialState",
        components: [
          { name: "currReserve0", type: "uint112", internalType: "uint112" },
          { name: "currReserve1", type: "uint112", internalType: "uint112" },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PoolDeployed",
    inputs: [
      {
        name: "asset0",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "asset1",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "eulerAccount",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "pool",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PoolUninstalled",
    inputs: [
      {
        name: "asset0",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "asset1",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "eulerAccount",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "pool",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ProtocolFeeRecipientSet",
    inputs: [
      {
        name: "protocolFeeRecipient",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ProtocolFeeSet",
    inputs: [
      {
        name: "protocolFee",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "ControllerDisabled", inputs: [] },
  { type: "error", name: "EVC_InvalidAddress", inputs: [] },
  { type: "error", name: "E_DeploymentFailed", inputs: [] },
  { type: "error", name: "InvalidFee", inputs: [] },
  { type: "error", name: "InvalidProtocolFee", inputs: [] },
  { type: "error", name: "InvalidQuery", inputs: [] },
  { type: "error", name: "InvalidVaultImplementation", inputs: [] },
  { type: "error", name: "NotAuthorized", inputs: [] },
  { type: "error", name: "OldOperatorStillInstalled", inputs: [] },
  { type: "error", name: "OperatorNotInstalled", inputs: [] },
  { type: "error", name: "RecipientSetAlready", inputs: [] },
  { type: "error", name: "SliceOutOfBounds", inputs: [] },
  { type: "error", name: "Unauthorized", inputs: [] },
] as const;

export const euler_swap_factory_address =
  "0xf0CFe22d23699ff1B2CFe6B8f706A6DB63911262";

export const euler_swap_periphery_address =
  "0x18e5F5C1ff5e905b32CE860576031AE90E1d1336";
export const euler_swap_evc_address =
  "0x5301c7dD20bD945D2013b48ed0DEE3A284ca8989";

export const weth_vault_address = "0x859160DB5841E5cfB8D3f144C6b3381A85A4b410";
export const usdc_vault_address = "0x0A1a3b5f2041F33522C4efc754a7D096f880eE16";

export const ievault_abi = [
  {
    type: "function",
    name: "EVC",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "LTVBorrow",
    inputs: [{ name: "collateral", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint16", internalType: "uint16" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "LTVFull",
    inputs: [{ name: "collateral", type: "address", internalType: "address" }],
    outputs: [
      { name: "borrowLTV", type: "uint16", internalType: "uint16" },
      { name: "liquidationLTV", type: "uint16", internalType: "uint16" },
      { name: "initialLiquidationLTV", type: "uint16", internalType: "uint16" },
      { name: "targetTimestamp", type: "uint48", internalType: "uint48" },
      { name: "rampDuration", type: "uint32", internalType: "uint32" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "LTVLiquidation",
    inputs: [{ name: "collateral", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint16", internalType: "uint16" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "LTVList",
    inputs: [],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MODULE_BALANCE_FORWARDER",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MODULE_BORROWING",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MODULE_GOVERNANCE",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MODULE_INITIALIZE",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MODULE_LIQUIDATION",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MODULE_RISKMANAGER",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MODULE_TOKEN",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MODULE_VAULT",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "accountLiquidity",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "liquidation", type: "bool", internalType: "bool" },
    ],
    outputs: [
      { name: "collateralValue", type: "uint256", internalType: "uint256" },
      { name: "liabilityValue", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "accountLiquidityFull",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "liquidation", type: "bool", internalType: "bool" },
    ],
    outputs: [
      { name: "collaterals", type: "address[]", internalType: "address[]" },
      {
        name: "collateralValues",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      { name: "liabilityValue", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "accumulatedFees",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "accumulatedFeesAssets",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      { name: "holder", type: "address", internalType: "address" },
      { name: "spender", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      { name: "spender", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "asset",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "balanceForwarderEnabled",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "balanceTrackerAddress",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "borrow",
    inputs: [
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "receiver", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "caps",
    inputs: [],
    outputs: [
      { name: "supplyCap", type: "uint16", internalType: "uint16" },
      { name: "borrowCap", type: "uint16", internalType: "uint16" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "cash",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkAccountStatus",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "collaterals", type: "address[]", internalType: "address[]" },
    ],
    outputs: [{ name: "", type: "bytes4", internalType: "bytes4" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkLiquidation",
    inputs: [
      { name: "liquidator", type: "address", internalType: "address" },
      { name: "violator", type: "address", internalType: "address" },
      { name: "collateral", type: "address", internalType: "address" },
    ],
    outputs: [
      { name: "maxRepay", type: "uint256", internalType: "uint256" },
      { name: "maxYield", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkVaultStatus",
    inputs: [],
    outputs: [{ name: "", type: "bytes4", internalType: "bytes4" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "configFlags",
    inputs: [],
    outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "convertFees",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "convertToAssets",
    inputs: [{ name: "shares", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "convertToShares",
    inputs: [{ name: "assets", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "creator",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "dToken",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "debtOf",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "debtOfExact",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "receiver", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "disableBalanceForwarder",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "disableController",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "enableBalanceForwarder",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "feeReceiver",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "flashLoan",
    inputs: [
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "data", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "governorAdmin",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hookConfig",
    inputs: [],
    outputs: [
      { name: "hookTarget", type: "address", internalType: "address" },
      { name: "hookedOps", type: "uint32", internalType: "uint32" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      { name: "proxyCreator", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "interestAccumulator",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "interestFee",
    inputs: [],
    outputs: [{ name: "", type: "uint16", internalType: "uint16" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "interestRate",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "interestRateModel",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "liquidate",
    inputs: [
      { name: "violator", type: "address", internalType: "address" },
      { name: "collateral", type: "address", internalType: "address" },
      { name: "repayAssets", type: "uint256", internalType: "uint256" },
      { name: "minYieldBalance", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidationCoolOffTime",
    inputs: [],
    outputs: [{ name: "", type: "uint16", internalType: "uint16" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxDeposit",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxLiquidationDiscount",
    inputs: [],
    outputs: [{ name: "", type: "uint16", internalType: "uint16" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxMint",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxRedeem",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxWithdraw",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "receiver", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "oracle",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "permit2Address",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "previewDeposit",
    inputs: [{ name: "assets", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "previewMint",
    inputs: [{ name: "shares", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "previewRedeem",
    inputs: [{ name: "shares", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "previewWithdraw",
    inputs: [{ name: "assets", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "protocolConfigAddress",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "protocolFeeReceiver",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "protocolFeeShare",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pullDebt",
    inputs: [
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "from", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "redeem",
    inputs: [
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "receiver", type: "address", internalType: "address" },
      { name: "owner", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "repay",
    inputs: [
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "receiver", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "repayWithShares",
    inputs: [
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "receiver", type: "address", internalType: "address" },
    ],
    outputs: [
      { name: "shares", type: "uint256", internalType: "uint256" },
      { name: "debt", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setCaps",
    inputs: [
      { name: "supplyCap", type: "uint16", internalType: "uint16" },
      { name: "borrowCap", type: "uint16", internalType: "uint16" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setConfigFlags",
    inputs: [
      { name: "newConfigFlags", type: "uint32", internalType: "uint32" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setFeeReceiver",
    inputs: [
      { name: "newFeeReceiver", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setGovernorAdmin",
    inputs: [
      { name: "newGovernorAdmin", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setHookConfig",
    inputs: [
      { name: "newHookTarget", type: "address", internalType: "address" },
      { name: "newHookedOps", type: "uint32", internalType: "uint32" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setInterestFee",
    inputs: [{ name: "newFee", type: "uint16", internalType: "uint16" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setInterestRateModel",
    inputs: [{ name: "newModel", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setLTV",
    inputs: [
      { name: "collateral", type: "address", internalType: "address" },
      { name: "borrowLTV", type: "uint16", internalType: "uint16" },
      { name: "liquidationLTV", type: "uint16", internalType: "uint16" },
      { name: "rampDuration", type: "uint32", internalType: "uint32" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setLiquidationCoolOffTime",
    inputs: [
      { name: "newCoolOffTime", type: "uint16", internalType: "uint16" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setMaxLiquidationDiscount",
    inputs: [{ name: "newDiscount", type: "uint16", internalType: "uint16" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "skim",
    inputs: [
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "receiver", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalAssets",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalBorrows",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalBorrowsExact",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "touch",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      { name: "to", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      { name: "from", type: "address", internalType: "address" },
      { name: "to", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFromMax",
    inputs: [
      { name: "from", type: "address", internalType: "address" },
      { name: "to", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unitOfAccount",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "receiver", type: "address", internalType: "address" },
      { name: "owner", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
] as const;

export const ievc_abi = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  { type: "receive", stateMutability: "payable" },
  {
    type: "function",
    name: "areChecksDeferred",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "areChecksInProgress",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "batch",
    inputs: [
      {
        name: "items",
        type: "tuple[]",
        internalType: "struct IEVC.BatchItem[]",
        components: [
          { name: "targetContract", type: "address", internalType: "address" },
          {
            name: "onBehalfOfAccount",
            type: "address",
            internalType: "address",
          },
          { name: "value", type: "uint256", internalType: "uint256" },
          { name: "data", type: "bytes", internalType: "bytes" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "batchRevert",
    inputs: [
      {
        name: "items",
        type: "tuple[]",
        internalType: "struct IEVC.BatchItem[]",
        components: [
          { name: "targetContract", type: "address", internalType: "address" },
          {
            name: "onBehalfOfAccount",
            type: "address",
            internalType: "address",
          },
          { name: "value", type: "uint256", internalType: "uint256" },
          { name: "data", type: "bytes", internalType: "bytes" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "batchSimulation",
    inputs: [
      {
        name: "items",
        type: "tuple[]",
        internalType: "struct IEVC.BatchItem[]",
        components: [
          { name: "targetContract", type: "address", internalType: "address" },
          {
            name: "onBehalfOfAccount",
            type: "address",
            internalType: "address",
          },
          { name: "value", type: "uint256", internalType: "uint256" },
          { name: "data", type: "bytes", internalType: "bytes" },
        ],
      },
    ],
    outputs: [
      {
        name: "batchItemsResult",
        type: "tuple[]",
        internalType: "struct IEVC.BatchItemResult[]",
        components: [
          { name: "success", type: "bool", internalType: "bool" },
          { name: "result", type: "bytes", internalType: "bytes" },
        ],
      },
      {
        name: "accountsStatusCheckResult",
        type: "tuple[]",
        internalType: "struct IEVC.StatusCheckResult[]",
        components: [
          { name: "checkedAddress", type: "address", internalType: "address" },
          { name: "isValid", type: "bool", internalType: "bool" },
          { name: "result", type: "bytes", internalType: "bytes" },
        ],
      },
      {
        name: "vaultsStatusCheckResult",
        type: "tuple[]",
        internalType: "struct IEVC.StatusCheckResult[]",
        components: [
          { name: "checkedAddress", type: "address", internalType: "address" },
          { name: "isValid", type: "bool", internalType: "bool" },
          { name: "result", type: "bytes", internalType: "bytes" },
        ],
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "call",
    inputs: [
      { name: "targetContract", type: "address", internalType: "address" },
      { name: "onBehalfOfAccount", type: "address", internalType: "address" },
      { name: "value", type: "uint256", internalType: "uint256" },
      { name: "data", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "result", type: "bytes", internalType: "bytes" }],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "controlCollateral",
    inputs: [
      { name: "targetCollateral", type: "address", internalType: "address" },
      { name: "onBehalfOfAccount", type: "address", internalType: "address" },
      { name: "value", type: "uint256", internalType: "uint256" },
      { name: "data", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "result", type: "bytes", internalType: "bytes" }],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "disableCollateral",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "vault", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "disableController",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "enableCollateral",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "vault", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "enableController",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "vault", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "forgiveAccountStatusCheck",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "forgiveVaultStatusCheck",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getAccountOwner",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAddressPrefix",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bytes19", internalType: "bytes19" }],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getCollaterals",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getControllers",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentOnBehalfOfAccount",
    inputs: [
      { name: "controllerToCheck", type: "address", internalType: "address" },
    ],
    outputs: [
      { name: "onBehalfOfAccount", type: "address", internalType: "address" },
      { name: "controllerEnabled", type: "bool", internalType: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLastAccountStatusCheckTimestamp",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getNonce",
    inputs: [
      { name: "addressPrefix", type: "bytes19", internalType: "bytes19" },
      { name: "nonceNamespace", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperator",
    inputs: [
      { name: "addressPrefix", type: "bytes19", internalType: "bytes19" },
      { name: "operator", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRawExecutionContext",
    inputs: [],
    outputs: [{ name: "context", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "haveCommonOwner",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "otherAccount", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "isAccountOperatorAuthorized",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "operator", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isAccountStatusCheckDeferred",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isCollateralEnabled",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "vault", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isControlCollateralInProgress",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isControllerEnabled",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "vault", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isLockdownMode",
    inputs: [
      { name: "addressPrefix", type: "bytes19", internalType: "bytes19" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isOperatorAuthenticated",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isPermitDisabledMode",
    inputs: [
      { name: "addressPrefix", type: "bytes19", internalType: "bytes19" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isSimulationInProgress",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isVaultStatusCheckDeferred",
    inputs: [{ name: "vault", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "permit",
    inputs: [
      { name: "signer", type: "address", internalType: "address" },
      { name: "sender", type: "address", internalType: "address" },
      { name: "nonceNamespace", type: "uint256", internalType: "uint256" },
      { name: "nonce", type: "uint256", internalType: "uint256" },
      { name: "deadline", type: "uint256", internalType: "uint256" },
      { name: "value", type: "uint256", internalType: "uint256" },
      { name: "data", type: "bytes", internalType: "bytes" },
      { name: "signature", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "reorderCollaterals",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "index1", type: "uint8", internalType: "uint8" },
      { name: "index2", type: "uint8", internalType: "uint8" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requireAccountAndVaultStatusCheck",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requireAccountStatusCheck",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requireVaultStatusCheck",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "setAccountOperator",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "operator", type: "address", internalType: "address" },
      { name: "authorized", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "setLockdownMode",
    inputs: [
      { name: "addressPrefix", type: "bytes19", internalType: "bytes19" },
      { name: "enabled", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "setNonce",
    inputs: [
      { name: "addressPrefix", type: "bytes19", internalType: "bytes19" },
      { name: "nonceNamespace", type: "uint256", internalType: "uint256" },
      { name: "nonce", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "setOperator",
    inputs: [
      { name: "addressPrefix", type: "bytes19", internalType: "bytes19" },
      { name: "operator", type: "address", internalType: "address" },
      { name: "operatorBitField", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "setPermitDisabledMode",
    inputs: [
      { name: "addressPrefix", type: "bytes19", internalType: "bytes19" },
      { name: "enabled", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AccountStatusCheck",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "controller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CallWithContext",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "onBehalfOfAddressPrefix",
        type: "bytes19",
        indexed: true,
        internalType: "bytes19",
      },
      {
        name: "onBehalfOfAccount",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "targetContract",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "selector",
        type: "bytes4",
        indexed: false,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CollateralStatus",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "collateral",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      { name: "enabled", type: "bool", indexed: false, internalType: "bool" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ControllerStatus",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "controller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      { name: "enabled", type: "bool", indexed: false, internalType: "bool" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LockdownModeStatus",
    inputs: [
      {
        name: "addressPrefix",
        type: "bytes19",
        indexed: true,
        internalType: "bytes19",
      },
      { name: "enabled", type: "bool", indexed: false, internalType: "bool" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NonceStatus",
    inputs: [
      {
        name: "addressPrefix",
        type: "bytes19",
        indexed: true,
        internalType: "bytes19",
      },
      {
        name: "nonceNamespace",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "oldNonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "newNonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NonceUsed",
    inputs: [
      {
        name: "addressPrefix",
        type: "bytes19",
        indexed: true,
        internalType: "bytes19",
      },
      {
        name: "nonceNamespace",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "nonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorStatus",
    inputs: [
      {
        name: "addressPrefix",
        type: "bytes19",
        indexed: true,
        internalType: "bytes19",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "accountOperatorAuthorized",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnerRegistered",
    inputs: [
      {
        name: "addressPrefix",
        type: "bytes19",
        indexed: true,
        internalType: "bytes19",
      },
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PermitDisabledModeStatus",
    inputs: [
      {
        name: "addressPrefix",
        type: "bytes19",
        indexed: true,
        internalType: "bytes19",
      },
      { name: "enabled", type: "bool", indexed: false, internalType: "bool" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "VaultStatusCheck",
    inputs: [
      {
        name: "vault",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "EVC_BatchPanic", inputs: [] },
  { type: "error", name: "EVC_ChecksReentrancy", inputs: [] },
  { type: "error", name: "EVC_ControlCollateralReentrancy", inputs: [] },
  { type: "error", name: "EVC_ControllerViolation", inputs: [] },
  { type: "error", name: "EVC_EmptyError", inputs: [] },
  { type: "error", name: "EVC_InvalidAddress", inputs: [] },
  { type: "error", name: "EVC_InvalidData", inputs: [] },
  { type: "error", name: "EVC_InvalidNonce", inputs: [] },
  { type: "error", name: "EVC_InvalidOperatorStatus", inputs: [] },
  { type: "error", name: "EVC_InvalidTimestamp", inputs: [] },
  { type: "error", name: "EVC_InvalidValue", inputs: [] },
  { type: "error", name: "EVC_LockdownMode", inputs: [] },
  { type: "error", name: "EVC_NotAuthorized", inputs: [] },
  { type: "error", name: "EVC_OnBehalfOfAccountNotAuthenticated", inputs: [] },
  { type: "error", name: "EVC_PermitDisabledMode", inputs: [] },
  {
    type: "error",
    name: "EVC_RevertedBatchResult",
    inputs: [
      {
        name: "batchItemsResult",
        type: "tuple[]",
        internalType: "struct IEVC.BatchItemResult[]",
        components: [
          { name: "success", type: "bool", internalType: "bool" },
          { name: "result", type: "bytes", internalType: "bytes" },
        ],
      },
      {
        name: "accountsStatusResult",
        type: "tuple[]",
        internalType: "struct IEVC.StatusCheckResult[]",
        components: [
          { name: "checkedAddress", type: "address", internalType: "address" },
          { name: "isValid", type: "bool", internalType: "bool" },
          { name: "result", type: "bytes", internalType: "bytes" },
        ],
      },
      {
        name: "vaultsStatusResult",
        type: "tuple[]",
        internalType: "struct IEVC.StatusCheckResult[]",
        components: [
          { name: "checkedAddress", type: "address", internalType: "address" },
          { name: "isValid", type: "bool", internalType: "bool" },
          { name: "result", type: "bytes", internalType: "bytes" },
        ],
      },
    ],
  },
  { type: "error", name: "EVC_SimulationBatchNested", inputs: [] },
  { type: "error", name: "InvalidIndex", inputs: [] },
  { type: "error", name: "TooManyElements", inputs: [] },
] as const;

const simple_swap_helper = [
  {
    type: "constructor",
    inputs: [
      { name: "_swapPeriphery", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getLimits",
    inputs: [
      { name: "pool", type: "address", internalType: "address" },
      { name: "tokenIn", type: "address", internalType: "address" },
      { name: "tokenOut", type: "address", internalType: "address" },
    ],
    outputs: [
      { name: "limitIn", type: "uint256", internalType: "uint256" },
      { name: "limitOut", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getQuote",
    inputs: [
      { name: "pool", type: "address", internalType: "address" },
      { name: "tokenIn", type: "address", internalType: "address" },
      { name: "tokenOut", type: "address", internalType: "address" },
      { name: "amountIn", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "amountOut", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "swap",
    inputs: [
      { name: "pool", type: "address", internalType: "address" },
      { name: "tokenIn", type: "address", internalType: "address" },
      { name: "tokenOut", type: "address", internalType: "address" },
      { name: "amountIn", type: "uint256", internalType: "uint256" },
      { name: "amountOutMin", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "amountOut", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapPeriphery",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IEulerSwapPeriphery",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "SwapExecuted",
    inputs: [
      { name: "user", type: "address", indexed: true, internalType: "address" },
      { name: "pool", type: "address", indexed: true, internalType: "address" },
      {
        name: "tokenIn",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "tokenOut",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amountIn",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amountOut",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [{ name: "target", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
  },
  { type: "error", name: "FailedInnerCall", inputs: [] },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [{ name: "token", type: "address", internalType: "address" }],
  },
] as const;

const simple_position_helper = [
  {
    type: "constructor",
    inputs: [
      { name: "_evc", type: "address", internalType: "address" },
      { name: "_swapPeriphery", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "batchDeposit",
    inputs: [
      { name: "vaults", type: "address[]", internalType: "contract IEVault[]" },
      { name: "amounts", type: "uint256[]", internalType: "uint256[]" },
      { name: "enableAsCollateral", type: "bool[]", internalType: "bool[]" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      { name: "vault", type: "address", internalType: "contract IEVault" },
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "enableAsCollateral", type: "bool", internalType: "bool" },
    ],
    outputs: [{ name: "shares", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "evc",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IEVC" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPosition",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "vault", type: "address", internalType: "address" },
    ],
    outputs: [
      { name: "shares", type: "uint256", internalType: "uint256" },
      { name: "assets", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getQuote",
    inputs: [
      { name: "pool", type: "address", internalType: "address" },
      { name: "tokenIn", type: "address", internalType: "address" },
      { name: "tokenOut", type: "address", internalType: "address" },
      { name: "amountIn", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "amountOut", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "positions",
    inputs: [
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
    ],
    outputs: [
      { name: "vault", type: "address", internalType: "contract IEVault" },
      { name: "shares", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "swap",
    inputs: [
      { name: "pool", type: "address", internalType: "address" },
      { name: "tokenIn", type: "address", internalType: "address" },
      { name: "tokenOut", type: "address", internalType: "address" },
      { name: "amountIn", type: "uint256", internalType: "uint256" },
      { name: "amountOutMin", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "amountOut", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapPeriphery",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IEulerSwapPeriphery",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      { name: "vault", type: "address", internalType: "contract IEVault" },
      { name: "assets", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "shares", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Deposited",
    inputs: [
      { name: "user", type: "address", indexed: true, internalType: "address" },
      {
        name: "vault",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "assets",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "shares",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SwapExecuted",
    inputs: [
      { name: "user", type: "address", indexed: true, internalType: "address" },
      { name: "pool", type: "address", indexed: true, internalType: "address" },
      {
        name: "tokenIn",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "tokenOut",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amountIn",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amountOut",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Withdrawn",
    inputs: [
      { name: "user", type: "address", indexed: true, internalType: "address" },
      {
        name: "vault",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "assets",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "shares",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [{ name: "target", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
  },
  { type: "error", name: "FailedInnerCall", inputs: [] },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [{ name: "token", type: "address", internalType: "address" }],
  },
] as const;

export const euler_swap_abi = [
  {
    type: "function",
    name: "activate",
    inputs: [
      {
        name: "initialState",
        type: "tuple",
        internalType: "struct IEulerSwap.InitialState",
        components: [
          { name: "currReserve0", type: "uint112", internalType: "uint112" },
          { name: "currReserve1", type: "uint112", internalType: "uint112" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "computeQuote",
    inputs: [
      { name: "tokenIn", type: "address", internalType: "address" },
      { name: "tokenOut", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "exactIn", type: "bool", internalType: "bool" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAssets",
    inputs: [],
    outputs: [
      { name: "asset0", type: "address", internalType: "address" },
      { name: "asset1", type: "address", internalType: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLimits",
    inputs: [
      { name: "tokenIn", type: "address", internalType: "address" },
      { name: "tokenOut", type: "address", internalType: "address" },
    ],
    outputs: [
      { name: "limitIn", type: "uint256", internalType: "uint256" },
      { name: "limitOut", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getParams",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IEulerSwap.Params",
        components: [
          { name: "vault0", type: "address", internalType: "address" },
          { name: "vault1", type: "address", internalType: "address" },
          { name: "eulerAccount", type: "address", internalType: "address" },
          {
            name: "equilibriumReserve0",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "equilibriumReserve1",
            type: "uint112",
            internalType: "uint112",
          },
          { name: "priceX", type: "uint256", internalType: "uint256" },
          { name: "priceY", type: "uint256", internalType: "uint256" },
          { name: "concentrationX", type: "uint256", internalType: "uint256" },
          { name: "concentrationY", type: "uint256", internalType: "uint256" },
          { name: "fee", type: "uint256", internalType: "uint256" },
          { name: "protocolFee", type: "uint256", internalType: "uint256" },
          {
            name: "protocolFeeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getReserves",
    inputs: [],
    outputs: [
      { name: "reserve0", type: "uint112", internalType: "uint112" },
      { name: "reserve1", type: "uint112", internalType: "uint112" },
      { name: "status", type: "uint32", internalType: "uint32" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "swap",
    inputs: [
      { name: "amount0Out", type: "uint256", internalType: "uint256" },
      { name: "amount1Out", type: "uint256", internalType: "uint256" },
      { name: "to", type: "address", internalType: "address" },
      { name: "data", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

export const vault_finder_abi = [
  {
    type: "constructor",
    inputs: [{ name: "_factory", type: "address", internalType: "address" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "factory",
    inputs: [],
    outputs: [
      { name: "", type: "address", internalType: "contract GenericFactory" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "findVaultsByAsset",
    inputs: [{ name: "asset", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTotalVaults",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getVaultInfo",
    inputs: [{ name: "vault", type: "address", internalType: "address" }],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct VaultFinder.VaultInfo",
        components: [
          { name: "vault", type: "address", internalType: "address" },
          { name: "asset", type: "address", internalType: "address" },
          { name: "name", type: "string", internalType: "string" },
          { name: "symbol", type: "string", internalType: "string" },
          { name: "totalSupply", type: "uint256", internalType: "uint256" },
          { name: "totalAssets", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getVaults",
    inputs: [
      { name: "start", type: "uint256", internalType: "uint256" },
      { name: "end", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getVaultsInfo",
    inputs: [{ name: "vaults", type: "address[]", internalType: "address[]" }],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct VaultFinder.VaultInfo[]",
        components: [
          { name: "vault", type: "address", internalType: "address" },
          { name: "asset", type: "address", internalType: "address" },
          { name: "name", type: "string", internalType: "string" },
          { name: "symbol", type: "string", internalType: "string" },
          { name: "totalSupply", type: "uint256", internalType: "uint256" },
          { name: "totalAssets", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
] as const;

export const vault_finder_address =
  "0x1a36ca65366fbAA4469691d4fD9100ce1E7B84AD";
export const simple_swap_helper_address =
  "0xe8356930Cc7A6775eb136f9987B8e3f934a7D05B";
export const simple_position_helper_address =
  "0xCbd3a8afCdA13c3D3cEe7e9bb7d64659910a55E6";
